 int longestKSubstr(string s, int k) {
    // your code here
     unordered_map<char,int>umap;
     int i=0;
     int j=0;
     int ans=0;
     if(k>s.length())
     return -1;
     
    while(i<s.length())
    {
       // if(umap.size()<k)
        umap[s[i]]++;
        
        if(umap.size()==k)
        ans=max(ans,i-j+1);    
        
        else if(umap.size()>k)
        {
            while(umap.size()>k)
            {
                umap[s[j]]--;
                if(umap[s[j]]==0)
                umap.erase(s[j]);
                j++;
            }
        }
        i++;
    }
    if(ans==0)
    ans=-1;
   return ans;
    }
